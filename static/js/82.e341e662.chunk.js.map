{"version":3,"file":"static/js/82.e341e662.chunk.js","mappings":"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","sources":["app/reducers/addPokemonToList.ts","components/PokemonCardGrid.tsx","components/Login.tsx","pages/MyList.tsx","sections/Wrapper.tsx"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { setToast } from \"../slices/AppSlice\";\r\nimport { userPokemonsType } from \"../../utils/types\";\r\nimport { RootState } from \"../store\";\r\nimport { addToUserPokemonList } from \"../slices/PokemonSlice\";\r\n\r\nexport const addPokemonToList = createAsyncThunk(\r\n  \"pokemon/addPokemon\",\r\n  async (pokemon: userPokemonsType, { getState, dispatch }) => {\r\n    try {\r\n      const {\r\n        app: { userInfo },\r\n        pokemon: { userPokemons },\r\n      } = getState() as RootState;\r\n      if (!userInfo?.email) {\r\n        return dispatch(\r\n          setToast(\"Please login in order to add pokemon to your collection.\")\r\n        );\r\n      }\r\n      const index = userPokemons.findIndex((userPokemon: userPokemonsType) => {\r\n        return userPokemon.name === pokemon.name;\r\n      });\r\n\r\n      if (index === -1) {\r\n        await dispatch(addToUserPokemonList(pokemon));\r\n\r\n        dispatch(setToast(`${pokemon.name} added to your collection.`));\r\n      } else {\r\n        dispatch(setToast(`${pokemon.name} already part of your collection.`));\r\n      }\r\n    } catch (err) {\r\n      console.log({ err });\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { IoGitCompare } from \"react-icons/io5\";\r\nimport { FaTrash, FaPlus } from \"react-icons/fa\";\r\nimport {\r\n  addToCompare,\r\n  removeFromUserPokemonList,\r\n  setCurrentPokemon,\r\n} from \"../app/slices/PokemonSlice\";\r\nimport { useAppDispatch } from \"../app/hooks\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { setPokemonTab, setToast } from \"../app/slices/AppSlice\";\r\nimport { addPokemonToList } from \"../app/reducers/addPokemonToList\";\r\nimport { pokemonTabs } from \"../utils/constants\";\r\nimport { pokemonTypeInterface, userPokemonsType } from \"../utils/types\";\r\nfunction PokemonCardGrid({ pokemons }: { pokemons: userPokemonsType[] }) {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  return (\r\n    <div className=\"pokemon-card-grid-container\">\r\n      <div className=\"pokemon-card-grid\">\r\n        {pokemons &&\r\n          pokemons.length > 0 &&\r\n          pokemons?.map((data: userPokemonsType) => {\r\n            return (\r\n              <div key={data.id} className=\"pokemon-card\">\r\n                <div className=\"pokemon-card-list\">\r\n                  {location.pathname.includes(\"/pokemon\") ? (\r\n                    <FaPlus\r\n                      className=\"plus\"\r\n                      onClick={() => dispatch(addPokemonToList(data))}\r\n                    />\r\n                  ) : location.pathname.includes(\"/search\") ? (\r\n                    <FaPlus\r\n                      className=\"plus\"\r\n                      onClick={() => dispatch(addPokemonToList(data))}\r\n                    />\r\n                  ) : (\r\n                    <FaTrash\r\n                      className=\"trash\"\r\n                      onClick={async () => {\r\n                        await dispatch(removeFromUserPokemonList(data));\r\n                        dispatch(setToast(\"Pokemon Removed Successfully.\"));\r\n                      }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"pokemon-card-compare\">\r\n                  <IoGitCompare\r\n                    onClick={() => {\r\n                      dispatch(addToCompare(data));\r\n                      dispatch(\r\n                        setToast(\r\n                          `${data.name} has been added to compare queue.`\r\n                        )\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <h3 className=\"pokemon-card-title\">{data.name}</h3>\r\n                <img\r\n                  src={data.image}\r\n                  alt=\"\"\r\n                  className=\"pokemon-card-image\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    dispatch(setPokemonTab(pokemonTabs.description));\r\n                    dispatch(setCurrentPokemon(undefined));\r\n                    navigate(`/pokemon/${data.id}`);\r\n                  }}\r\n                />\r\n                <div className=\"pokemon-card-types\">\r\n                  {data.types.map(\r\n                    (type: pokemonTypeInterface, index: number) => {\r\n                      const keys = Object.keys(type);\r\n                      return (\r\n                        <div className=\"pokemon-card-types-type\" key={index}>\r\n                          <img\r\n                            src={type[keys[0]].image}\r\n                            alt=\"pokemon type\"\r\n                            className=\"pokemon-card-types-type-image\"\r\n                            loading=\"lazy\"\r\n                          />\r\n                          <h6 className=\"pokemon-card-types-type-text\">\r\n                            {keys[0]}\r\n                          </h6>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCardGrid;\r\n","import { useAppDispatch } from \"../app/hooks\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { firebaseAuth, firebaseDB, usersRef } from \"../utils/firebaseConfig\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { addDoc, collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { setUserStatus } from \"../app/slices/AppSlice\";\r\nimport { getUserPokemons } from \"../app/reducers/getUserPokemons\";\r\n\r\nfunction Login() {\r\n  const dispatch = useAppDispatch();\r\n  const handleLogin = async () => {\r\n    try {\r\n      const provider = new GoogleAuthProvider();\r\n      const result = await signInWithPopup(firebaseAuth, provider);\r\n      const { user } = result;\r\n\r\n      if (user && user.email && user.uid) {\r\n        const firestoreQuery = query(usersRef, where(\"uid\", \"==\", user.uid));\r\n        const fetchedUser = await getDocs(firestoreQuery);\r\n\r\n        if (fetchedUser.docs.length === 0) {\r\n          await addDoc(collection(firebaseDB, \"users\"), {\r\n            uid: user.uid,\r\n            email: user.email,\r\n          });\r\n          await addDoc(collection(firebaseDB, \"pokemonList\"), {\r\n            email: user.email,\r\n            pokemon: [],\r\n          });\r\n        }\r\n        dispatch(setUserStatus({ email: user.email }));\r\n        dispatch(getUserPokemons());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing in with Google:\", error);\r\n      // Handle the error (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <button onClick={handleLogin} className=\"login-btn\">\r\n        <FcGoogle /> Login with Google\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import Wrapper from \"../sections/Wrapper\";\r\nimport Login from \"../components/Login\";\r\nimport { useAppSelector } from \"../app/hooks\";\r\nimport PokemonCardGrid from \"../components/PokemonCardGrid\";\r\n\r\nfunction MyList() {\r\n  const { userInfo } = useAppSelector(({ app }) => app);\r\n  const { userPokemons } = useAppSelector(({ pokemon }) => pokemon);\r\n  return (\r\n    <div className=\"list\">\r\n      {userInfo ? <PokemonCardGrid pokemons={userPokemons} /> : <Login />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wrapper(MyList);\r\n","import React from \"react\";\r\n\r\nconst Wrapper = (Component: React.FC) => () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Component />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n"],"names":["addPokemonToList","createAsyncThunk","async","pokemon","getState","dispatch","app","userInfo","userPokemons","email","setToast","findIndex","userPokemon","name","addToUserPokemonList","err","console","log","pokemons","useAppDispatch","navigate","useNavigate","location","useLocation","className","length","map","data","pathname","includes","onClick","removeFromUserPokemonList","addToCompare","src","image","alt","loading","setPokemonTab","pokemonTabs","setCurrentPokemon","undefined","id","types","type","index","keys","Object","provider","GoogleAuthProvider","result","signInWithPopup","firebaseAuth","user","uid","firestoreQuery","query","usersRef","where","getDocs","docs","addDoc","collection","firebaseDB","setUserStatus","getUserPokemons","error","Wrapper","useAppSelector","PokemonCardGrid","Component"],"sourceRoot":""}